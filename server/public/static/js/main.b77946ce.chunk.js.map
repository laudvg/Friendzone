{"version":3,"sources":["services/AuthService.js","components/Login/Login.js","components/Signup/Signup.js","components/Home/Home.js","components/Question/Question.js","components/Quiz/Quiz.js","components/ChatComponent/InputMess/InputMess.js","components/Contacts/Contacts.js","components/ChatComponent/Chat/Chat.js","components/ChatComponent/ChatComponent.js","components/Profile/Profile.js","components/MatchProf/MatchProf.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","logout","loggedInUser","get","upload","picture","submitQuizVal","quizValue","log","submitPrefVal","gender","submitAbout","description","matches","matchUser","name","this","axios","create","baseURL","process","withCredentials","Login","props","state","username","password","handleChange","e","target","value","setState","handleLogin","setUser","history","preventDefault","authService","push","className","onSubmit","htmlFor","type","onChange","class","Component","withRouter","SignUp","handleSignUp","required","Home","href","to","Question","update","defaultValue","ReactDOM","render","document","getElementById","Quiz","Object","values","splice","reduce","ac","cu","updateIam","genre","iam","updateLooking","lookingFor","updateAbout","Q1","Q2","Q3","Q4","Q5","averageQ","bind","service","toDB","path","onClick","minLength","maxLength","size","placeholder","min","max","rangevalue1","id","rangevalue2","rangevalue3","rangevalue4","rangevalue5","addValueToDB","InputMess","handlerText","text","handlerSubmit","info","variant","Contacts","map","match","i","key","React","Chat","sendMessage","trim","mess","socket","emit","componentDidUpdate","scrollTop","scrollHeight","messages","on","message","Math","ceil","elem","idx","ChatComponent","updateUserList","userList","io","list","exact","Profile","whole","err","location","MatchProf","matchName","params","userMatched","oneUser","App","fetchUser","extat","classname","Boolean","window","hostname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b77946ce.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => res.data)\n  }\n\n  logout = (user) => {\n    return this.instance.post('/logout', user)\n    .then(res => res.data)\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  submitQuizVal = (quizValue) => {\n    return this.instance.post('/quiz', quizValue)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.log(error))\n  }\n\n  submitPrefVal = (gender) => {\n    return this.instance.post('/preferences', {gender})\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.log(error))\n  }\n\n  submitAbout = (description) => {\n    return this.instance.post('/description', {description})\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.log(error))\n  }\n\n  matches = () => {\n    return this.instance.get('/matches')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  matchUser = (name) =>{\n    return this.instance.get(`/${name}`)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react'\nimport AuthService from '../../services/AuthService';\nimport { withRouter } from 'react-router-dom'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = { \n    username: '',\n    password: ''\n  }\n  \n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n  }\n\n  handleLogin = (e) => {\n    const { setUser, history } = this.props;\n    e.preventDefault()\n    this.authService.login(this.state)\n    .then(\n      (user) => {\n        setUser(user)\n        history.push(\"/quiz\")\n      }\n    ).catch(error => {\n      history.push(\"/home\")\n    })\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div className= \"log-page\">\n        <div className=\"sign-log\">\n          <h1>Login</h1>\n          <form onSubmit={this.handleLogin}>\n            <div className=\"tags\">\n              <label htmlFor=\"username\">Username: </label>\n              <input className=\"input-log\" type=\"text\" name=\"username\" value={username} onChange={this.handleChange}/>\n              <label htmlFor=\"password\" >Password: </label>\n              <input className=\"input-log\" type=\"password\" name=\"password\" value={password} onChange={this.handleChange}/>\n              <input class=\"log-submit\" type=\"submit\" value=\"Login\"/>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Login)","import React, { Component } from 'react'\nimport AuthService from '../../services/AuthService'\nimport { withRouter } from 'react-router-dom'\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props)\n    this.authService = new AuthService();\n  }\n\n  state = {\n    username: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({...this.state, [name]:value})\n  }\n  handleSignUp = (e) => {\n    e.preventDefault()\n    const { history } = this.props;\n    this.authService.signup(this.state)\n    .then(\n      () => {\n        history.push(\"/login\")\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div className= \"log-page\">\n        <div className=\"sign-log\">\n          <h1>SignUp</h1>\n            <form onSubmit={this.handleSignUp}>\n            <div className=\"tags\">\n              <label htmlFor=\"username\">Username: </label>\n              <input className=\"input-log\" type=\"text\" name=\"username\" value={username} required onChange={this.handleChange}/>\n              <label htmlFor=\"password\">Password: </label>\n              <input className=\"input-log\" type=\"password\" value={password} name=\"password\" required onChange={this.handleChange}/>\n              <input class=\"log-submit\" type=\"submit\" value=\"Create account\"/>\n              </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default withRouter(SignUp)","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className= \"app-all\">\n        <div className=\"home\">\n          <h1 className=\"home-title\">Friendzone</h1>\n            <div className= \"two-buttons\">\n              <button href=\"/login\" className=\"button1\"><Link to=\"/login\">Login</Link></button>\n              <button href=\"/login\" className=\"button1\"><Link to=\"/signup\">Sign Up</Link></button>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Home)","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class Question extends Component {\n\n  handleChange=(e)=>{\n    this.props.update(e.target.value)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className =\"dropdown\">\n        <form className =\"dropdown\">\n          <select onChange={(e)=>this.handleChange(e)}>\n          <option defaultValue=\"Non\">Non Specified</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Male\">Male</option>\n          </select>\n        </form>\n      </div>\n      </div>\n )\n}\n}\n\n\nReactDOM.render(\n  <Question />,\n  document.getElementById('root')\n);\n","import React, { Component } from \"react\";\nimport Question from \"../Question/Question\";\nimport AuthService from \"../../services/AuthService.js\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Q1: 3,\n      Q2: 3,\n      Q3: 3,\n      Q4: 3,\n      Q5: 3,\n      averageQ: 3,\n      iam: \"\",\n      lookingFor: \"\",\n      description: \"\",\n      user: props.user\n    };\n    // console.log(props.user.username)\n    this.update = this.update.bind(this);\n    this.service = new AuthService();\n  }\n\n  state = {\n    user: \"\"\n  };\n\n  update = e => {\n    const { name, value } = e.target;\n    this.setState({\n      ...this.state,\n      [name]: +value,\n      averageQ:\n        Object.values(this.state)\n          .splice(0, 4)\n          .reduce((ac, cu) => ac + cu, 1) / 5\n    });\n  };\n\n  addValueToDB() {\n    const { history } = this.props;\n    const toDB = {\n      iam: this.state.iam,\n      lookingFor: this.state.lookingFor,\n      averageQ: this.state.averageQ,\n      description: this.state.description\n    };\n\n    this.service.submitQuizVal(toDB).then(\n      () => {\n        history.push(\"/profile\", { ...this.state });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  updateIam = genre => {\n    this.setState({ ...this.state, iam: genre });\n  };\n\n  updateLooking = genre => {\n    this.setState({ ...this.state, lookingFor: genre });\n  };\n\n  updateAbout = e => {\n    // console.log(this.state.description)\n    this.setState({ ...this.state, description: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"user-profile\">\n        <div>\n          <header className=\"private-header\">\n            <h3 className=\"App-name\">Friendzone</h3>\n            <div className=\"bar-tres\">\n            <div className=\"buttons-head\">\n            <button className=\"nav-a\" path=\"/login\"><Link to=\"/\">Home</Link></button>\n            <button className=\"nav-a\" path=\"/quiz\"><Link to=\"/quiz\">Quiz</Link></button>\n            <button className=\"nav-a\" path=\"/\" onClick={()=> this.logout()}><Link to=\"/quiz\">Logout</Link></button>\n            </div>\n            </div>\n          </header>\n        </div>\n        <div className=\"q-father\">\n          <div className=\"titles\">\n              <h2>Quiz</h2>\n              <h1>Hello {this.state.user.username}!</h1>\n            <div>\n              <div className=\"bars\">\n                <h3>You are a</h3>\n                <Question update={this.updateIam}></Question>\n                <h3>looking to find</h3>\n                <Question update={this.updateLooking}></Question>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              className=\"description\"\n              required\n              minLength=\"10\"\n              maxLength=\"60\"\n              size=\"100\"\n              placeholder=\"write one line about yourself\"\n              value={this.state.description}\n              onChange={e => this.updateAbout(e)}\n            ></input>\n          </div>\n          <div className=\"quiz-ranges\">\n            <div className=\"quiz-q\">\n              <h3>Conventional</h3>\n              <input\n                name=\"Q1\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                value={this.rangevalue1}\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.update(e)}\n              ></input>\n              <h3>Creative</h3>\n            </div>\n            <div className=\"quiz-q\">\n              <h3>Calm</h3>\n              <input\n                name=\"Q2\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                value={this.rangevalue2}\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.update(e)}\n              ></input>\n              <h3>Active</h3>\n            </div>\n            <div className=\"quiz-q\">\n              <h3>Organized</h3>\n              <input\n                name=\"Q3\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                value={this.rangevalue3}\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.update(e)}\n              ></input>\n              <h3>Spontaneous</h3>\n            </div>\n            <div className=\"quiz-q\">\n              <h3>Reserved</h3>\n              <input\n                name=\"Q4\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                value={this.rangevalue4}\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.update(e)}\n              ></input>\n              <h3>Extroverted</h3>\n            </div>\n            <div className=\"quiz-q\">\n              <h3>Disciplined</h3>\n              <input\n                name=\"Q5\"\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                value={this.rangevalue5}\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={e => this.update(e)}\n              ></input>\n              <h3>Relaxed</h3>\n            </div>\n            <button\n              className=\"button1\"\n              type=\"button\"\n              onClick={() => this.addValueToDB()}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Quiz);\n","import React, { Component } from 'react'\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nexport default class InputMess extends Component {\n    constructor(){\n        super()\n        this.state={\n            text:\"\"\n        }\n    }\n\n    handlerText=(e)=>{\n      console.log(`handlerText: ${e.target.value}`)\n        this.setState({...this.state, text: e.target.value})\n    }\n\n    handlerSubmit=(e)=>{\n      console.log(`handlerSubmit: ${this.state.text}`)\n        e.preventDefault()\n        this.props.info(this.state.text)\n        this.setState({...this.state, text: \"\"})\n    }\n\n    //renderiza el input para escribir mensajes dentro del chat\n    render() {\n        return (\n            <div>\n            <div className=\"chat-class\" >\n              <input\n                onChange={e => {\n                  this.handlerText(e);\n                }}\n                type=\"text\"\n                placeholder=\"Your message\"\n                value={this.state.text}\n                className = \"input-message\"\n              />\n            </div>\n    \n            <button\n            className=\"button1\"\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={(e) => {\n                this.handlerSubmit(e);\n              }}\n            >\n              Send\n            </button>\n          </div>\n        )\n    }\n}\n","import React  from \"react\";\nimport AuthService from './../../services/AuthService';\n\nclass Contacts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.state.user = props.user.username;\n    this.state.quizValue = props.user.quizValue;\n  }\n  authService = null;\n\n  state = {\n    user: \"\",\n    matches: []\n  };\n\n  componentDidMount() {\n    this.authService.matches(this.state).then(matches => {\n      this.setState({matches: matches});\n    })\n  }\n\n  render() {\n    return (\n\n      <div>\n        <div>\n          <table className=\"contacts\">\n            <tbody>\n              {this.state.matches.map((match, i) => (<tr key={i} matches={match}>\n               <td><a href={`${match.username}/${match.quizValue}`}>{match.username}</a></td>\n              </tr>\n            ))}\n            </tbody>\n        </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from \"react\";\nimport InputMess from \"../InputMess/InputMess\";\nimport { withRouter } from \"react-router-dom\";\nimport AuthService from '../../../services/AuthService';\nimport './Chat.css'\nimport Contacts from \"../../Contacts/Contacts\";\n// import './bootstrap/dist/css/bootstrap.min.css'\n\n\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService()\n    \n    this.state = {\n      messages: [],\n      user: this.props.user,\n      averageQ: this.props.averageQ\n    };\n\n    // Recibimos el socket por props, se creó en ChatComponent.js\n    this.socket = this.props.socket;\n\n    // Creamos un \".on\" que escuchará los mensajes nuevos\n    this.socket.on(\"newMessage\", message => {\n      let mess = this.state.messages;\n      let user1 = Math.ceil(message.value);\n      let user2 = Math.ceil(this.state.averageQ);\n      if(user1 === user2){\n      mess.push(message)\n      this.setState({ ...this.state, messages: mess })\n      }\n      // console.log(this.state)\n      // console.log(mess)\n      // console.log(message)\n      console.log(message.value);\n      console.log(this.state.averageQ);\n    });\n  }\n\n  // Este método recibe los textos que vienen del Input de los mensajes en el chat\n  sendMessage = text => {\n    console.log(text)\n    if(text.trim()===\"\")return\n    let mess = {\n      text: text,\n      user: this.state.user,\n      value:this.state.averageQ,\n    };\n    this.socket.emit(\"messageSent\", mess)\n  };\n\n  // Con este método el cuadro de chat tenga siempre el scroll abajo\n  componentDidUpdate=()=>{\n    document.getElementById('chatBox').scrollTop = document.getElementById('chatBox').scrollHeight;\n  }\n\n  // Renderiza la lista de usuarios, el box con el chat y el input para poder escribir mensajes.\n  render() {\n    console.log(this.props);\n    console.log(this.state.user);\n    return (\n      <div id=\"cont\">\n        <div className=\"chat-container\">\n         <div className=\"inner-chat\">\n        <h3>YourMatches</h3>\n        <div className=\"flow-contacts\"><Contacts user={this.state.user}></Contacts></div>\n        </div>\n          <div>\n            <div className=\"chatBox\" id=\"chatBox\">\n              {this.state.messages.map((elem, idx) => {\n                return (\n                  <h6 key={idx}>\n                    {elem.user} : {elem.text}\n                  </h6>\n                );\n              })}\n            </div>\n            {/* Input para nuevos mensajes */}\n            <div className=\"textForm\">\n              <InputMess info={this.sendMessage}></InputMess>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Chat);\n","import React, { Component } from 'react'\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n// import Intro from './Intro/Intro';\nimport Chat from './Chat/Chat';\n// import Contacts from \"../Contacts/Contacts\";\nimport io from 'socket.io-client'\n\n\nclass ChatComponent extends Component {\n  constructor(props){\n    super(props)\n    // this.contacts = new Contacts()\n\n    this.state = {\n      userList : [],\n      user : props.user,\n      averageQ: props.averageQ\n    }\n\n    // console.log(this.props.averageQ)\n    // Creamos el socket, y con ello la conexión al server\n    this.socket = io (\"https://hello-friendzone.herokuapp.com/\")\n    // this.socket = io('http://127.0.0.1:3001')\n    //this.socket = io('http://192.168.97.70:3001')\n\n    // Creamos un \".on\", el cual escucha si el server envia una lista de usuarios \n    this.socket.on('list', list => {\n      // console.log(this.socket)\n      this.setState({...this.state, userList: list})\n    })\n  }\n\n\n  // Este método recibe un NickName del Input de la portada\n  // Realiza un \".emit\" al server para que lo añada a la lista de usuarios.\n  // Nos redirije a \"/chat\"\n  updateUserList=(name)=>{\n    if(name.trim() !== ''){\n      this.setState({...this.state, user: name},()=>{\n        this.props.history.push('/chat')\n      })\n    }\n  }\n\n  componentDidMount(){\n    this.socket.emit('newUser', this.state.user)\n  }\n\n  // Tanto la ruta \"/chat\" como \"/list\" reciben \"socket\" por props, para poder usarlo\n  // de esta manera el server podrá identificarnos siempre como el mismo usuario,\n  // al no tener que crear una conexión distinta por componente\n  render() {\n    //  console.log(this.state.userList)\n    console.log(this.state.user)\n    return (\n      <div className=\"chat-contains\">\n         <Switch>\n          <Route exact path=\"/profile\" render={()=>(<Chat socket={this.socket} list={this.state.userList} user={this.state.user} averageQ={this.state.averageQ}/>)}></Route>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ChatComponent)\n","import React from 'react';\n// import Contacts from \"../Contacts/Contacts\";\nimport { Link } from 'react-router-dom'\nimport AuthService from '../../services/AuthService';\nimport { withRouter } from \"react-router-dom\";\nimport ChatComponent from \"../ChatComponent/ChatComponent\"\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService()\n    // this.contacts = new Contacts()\n\n    this.state = {\n      // contact: this.contact.username,\n      whole: this.props.user,\n      user: this.props.user.username,\n      averageQ: this.props.user.quizValue\n    }}\n\n\n  logout = () => {\n  this.authService.logout(this.state.whole)\n  .then(()=> this.props.history.push(\"/\"))\n  .catch((err)=> console.log(err))\n  }\n  \n  render() {\n    console.log(this.state.user)\n    return (\n      <div className=\"user-profile\">\n        <div>\n          <header className=\"private-header\">\n            <h3 className=\"App-name\">Friendzone</h3>\n            <div className=\"bar-tres\">\n            <div className=\"buttons-head\">\n            <button className=\"nav-a\" path=\"/login\"><Link to=\"/\">Home</Link></button>\n            <button className=\"nav-a\" path=\"/quiz\"><Link to=\"/quiz\">Quiz</Link></button>\n            <button className=\"nav-a\" path=\"/\" onClick={()=> this.logout()}><Link to=\"/quiz\">Logout</Link></button>\n            </div>\n            </div>\n          </header>\n        </div>\n\n        <div className=\"current-user\">\n          {/* <img src=\"profilepic\" alt=\" \"></img> */}\n          <h2 className=\"hello-user\">Hello {this.state.user}!</h2>\n          <h3>{this.props.location.description}</h3>\n        </div>\n        <div>\n          <div className=\"chat-container\"><ChatComponent user={this.state.user} averageQ={this.state.averageQ}/></div>\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default withRouter(Profile);\n","import React, { Component } from 'react'\nimport AuthService from \"../../services/AuthService\"\nimport { Link } from 'react-router-dom'\n\n\nexport default class MatchProf extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService()\n    this.state = {\n      matchName:this.props.match.params.matchName,\n      quizValue:this.props.match.params.quizValue,\n    }\n  }\n\n  componentDidMount(){\n   this.authService.matchUser(this.props.match.params.matchName)\n  .then(userMatched => this.setState({\n    ...this.state, quizValue: userMatched.oneUser.quizValue\n  }))\n  }\n\n  render() {\n    return (\n      <div className=\"user-profile final\">\n      <div className=\"text-user\">\n        <h1>This is {this.state.matchName}</h1>\n        <h1>He's a {this.state.quizValue}</h1>\n        <h6>But don't judge a book by it's cover ;)</h6>\n        <div>\n        <button className=\"nav-a\" path=\"/profile\"><Link to=\"/profile\">Back</Link></button>   \n        </div>\n      </div>\n      </div>\n    )\n  \n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport SignUp from './components/Signup/Signup';\nimport AuthService from './services/AuthService';\nimport Home from './components/Home/Home'\nimport Quiz from './components/Quiz/Quiz';\nimport Profile from './components/Profile/Profile';\nimport ChatComponent from \"./components/ChatComponent/ChatComponent\"\nimport MatchProf from \"./components/MatchProf/MatchProf\"\n// import Contacts from './components/Contacts/Contacts';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  state = {\n    user: null\n  }\n\n  setUser = (user, description) => {\n    this.setState({ ...this.state, user, description })\n  }\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService.loggedInUser()\n        .then(\n          (user) => {\n            this.setUser(user)\n          },\n          (error) => {\n            this.setUser(false)\n          }\n        )\n        .catch(() => {\n          this.setUser(false)\n        })\n    }\n  }\n\n  componentDidMount() {\n    this.fetchUser()\n  }\n\n  render() {\n    const { user,description } = this.state;\n    return (\n      \n      <div className=\"App\">\n        <Route exact path=\"/\" render={() =><Home></Home>}></Route>\n          <div>\n            {user && <Switch>\n              <Route exact path=\"/quiz\" render={(match) => <Quiz {...match} user={user} description={description}/> }/>\n              <Route exact path=\"/profile\" render={() => <Profile user={user}/> }/>\n              <Route exact path=\"/chat\" render={() => <ChatComponent user={user}/> }/>\n              <Route exact path=\"/login\" render={(match)=> <Home {...match} user={user}/>} />\n              <Route extat path=\"/:matchName\" render={(match)=> <MatchProf {...match} user={user}></MatchProf>} />\n            </Switch> }\n            {!user && <Switch>\n              <Route classname=\"login\" exact path=\"/login\" render={(match) => <Login {...match} setUser={this.setUser} />} />  \n              <Route exact path=\"/signup\" render={(match) => <SignUp {...match} setUser={this.setUser} />} />\n              <Route exact path=\"/home\" render={(match)=> <Home {...match} setUser={this.setUser}/>} />\n            </Switch> }\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}